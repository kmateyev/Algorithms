import java.util.*;

 /** problem A
 –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.

  –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —á–∏—Å–ª–∞ ùëÅ –∏ ùêæ (0<ùëÅ,ùêæ<100001). –í–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–¥–∞—é—Ç—Å—è ùëÅ —á–∏—Å–µ–ª –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é, –∞ –≤ —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–µ ‚Äì ùêæ —á–∏—Å–µ–ª –≤—Ç–æ—Ä–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤ –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö –ø–æ –º–æ–¥—É–ª—é –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç 2‚ãÖ109.

  –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ ùêæ —á–∏—Å–µ–ª –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —á–∏—Å–ª–æ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–æ–µ –∫ –¥–∞–Ω–Ω–æ–º—É. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤—ã–≤–µ–¥–∏—Ç–µ –º–µ–Ω—å—à–µ–µ –∏–∑ –Ω–∏—Ö.
 */
public class Solution {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    int n = sc.nextInt();
    int k = sc.nextInt();
    int arr[] = new int[n];

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –∫–æ–Ω—Å–æ–ª–∏
    for (int i = 0; i < arr.length; i++) {
      arr[i] = sc.nextInt();
    }

    // –ß–∏—Å–ª–∞ —Å–æ –≤—Ç—Ä–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ K
    // –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–µ—Å—å –º–∞—Å—Å–∏–≤, –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–π —Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–µ —á–∏—Å–ª–æ
    // –ù–∞–ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤ [2 4 8 1 6]. –í –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π X –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–æ —á–∏—Å–ª–æ 2, –∑–∞—Ç–µ–º 4 –∏ —Ç.–¥.
    for (int i = 0; i < n; i++) {
      int x = sc.nextInt();

      int leftSideOfMid = 0; // –ù–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
      int rightSideOfMid = n - 1; // –ü–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
      k = n + 1; // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ K –Ω–µ –¥–æ–ª–∂–Ω–æ –≤—Ö–æ–¥–∏—Ç—å –≤ –æ—Ç—Ä–µ–∑–æ–∫ –º–∞—Å—Å–∏–≤–∞

      // –ê–ª–≥–æ—Ä–∏—Ç–º –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
      while (leftSideOfMid <= rightSideOfMid) {
        int mid = (leftSideOfMid + rightSideOfMid) / 2; // –ò–Ω–¥–µ–∫—Å —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞

        // –ï—Å–ª–∏ X –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏, –∏—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ª–µ–≤–æ–π —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞

        if (x <= arr[mid]) {
          k = mid;
          rightSideOfMid = mid - 1; // –ß—Ç–æ–±—ã –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–∞–ª —Ç–æ–ª—å–∫–æ —Å –ª–µ–≤–æ–π —á–∞—Å—Ç—å—é
        }
        // –ò–Ω–∞—á–µ X –∏—â–µ–º –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞
        else {
          leftSideOfMid = mid + 1;
        }
      }

      // –í –º–∞—Å—Å–∏–≤–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ X
      if (k == n) {
        System.out.println(arr[n - 1]); // –ü–æ—ç—Ç–æ–º—É –æ—Ç–≤–µ—Ç–æ–º –±—É–¥–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ –º–∞—Å—Å–∏–≤–∞
      }

      //
      else if (k == 0) {
        System.out.println(arr[k]);
      }

      // –í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ
      else if (x - arr[k - 1] <= arr[k] - x) {
        System.out.println(arr[k - 1]);
      } else {
        System.out.println(arr[k]);
      }
    }
  }
}
